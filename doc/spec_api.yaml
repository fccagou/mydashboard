openapi: 3.0.3
info:
  title: MyDashboard API
  version: 0.0.1
servers:
  - url: http://127.0.0.1:8080
tags:
  - name: remote
    description: Operations about remote host
  - name: menu
    description: Operations about menu
  - name: user-config
    description: Operations about user configuration
paths:
  /conf/menu:
    get:
      tags:
        - menu
      summary: Get menu configuration
      description: Get menu configuration
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  menu:
                    type: array
                    items:
                      $ref: '#/components/schemas/MenuItem'
  /remote/list:
    get:
      tags:
        - remote
      summary: List remote hosts
      description: List remote hosts
      operationId: remote_list
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  hosts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Remote'
                  ordering:
                    type: object
                    additionalProperties:
                      $ref: '#/components/schemas/Ordering'
                    properties:
                      domains:
                        type: object
                        additionalProperties:
                          $ref: '#/components/schemas/Ordering'
                        properties:
                          groups:
                            type: object
                            additionalProperties:
                              $ref: '#/components/schemas/Ordering'
                    example:
                      france:
                        order: 1
                        domains:
                          domaine1:
                            order: 1
                            groups:
                              vert:
                                order: 1
                              rouge:
                                order: 2
                          domaine2:
                            order: 2
                      vanuatu:
                        order: 2
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 1
                message: Can't read remotes configuration
  '/remote/connect/{hostId}':
    get:
      tags:
        - remote
      summary: Connect to remote host
      description: Connect to remote host
      operationId: remote_connection
      parameters:
        - name: hostId
          in: path
          description: Host ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConnect'
        '404':
          description: Remote host not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                message: Host not found
  '/remote/info/{hostId}':
    get:
      tags:
        - remote
      summary: Get remote host information
      description: Get remote host information
      operationId: remote_information
      parameters:
        - name: hostId
          in: path
          description: Host ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                properties:
                  uuid:
                    type: string
                    format: uuid
                    example: 5b820b52-f03f-11ed-a05b-0242ac120003
                  name:
                    type: string
                    example: TS-01
                  config:
                    allOf:
                      - $ref: '#/components/schemas/RemoteConfig'
                      - properties:
                          proto-config:
                            type: object
                            example:
                              sec: nla
        '404':
          description: Remote host not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                message: Host not found
  '/user/preferences/global':
    get:
      tags:
        - user-config
      summary: Get global preferences
      description: Get global preferences
      operationId: local_preferences_global
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  preferences:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreferenceItem'
    post:
      tags:
        - user-config
      summary: Set global preferences
      description: Set global preferences
      operationId: local_preferences_global_set
      requestBody:
        description: Preferences
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                preferences:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                message: Preferences updated
        '400':
          description: Invalid preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorFormResponse'
        '404':
          description: Remote host not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                message: Host not found
  '/user/preferences/host/{hostId}':
    get:
      tags:
        - user-config
      summary: Get host preferences
      description: Get host preferences
      operationId: user_preferences_host
      parameters:
        - name: hostId
          in: path
          description: Host ID
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  preferences:
                    type: array
                    items:
                      $ref: '#/components/schemas/PreferenceItem'
        '404':
          description: Remote host not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                message: Host not found
    post:
      tags:
        - user-config
      summary: Set host preferences
      description: Set host preferences
      operationId: user_preferences_host_set
      parameters:
        - name: hostId
          in: path
          description: Host ID
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Preferences
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                preferences:
                  type: array
                  items:
                    properties:
                      name:
                        type: string
                      value:
                        type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 200
                message: Preferences updated
        '400':
          description: Invalid preferences
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorFormResponse'
        '404':
          description: Remote host not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              example:
                code: 404
                message: Host not found
components:
  schemas:
    Remote:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
          example: 5b820b52-f03f-11ed-a05b-0242ac120003
        name:
          type: string
          example: TS-01
        alias:
          type: string
          example: MyTS
        config:
          $ref: '#/components/schemas/RemoteConfig'
    RemoteConfig:
      type: object
      properties:
        proto:
          type: string
          example: ssh
        site:
          type: string
          example: france
        domain:
          type: string
          example: domaine1
        group:
          type: string
          example: vert
    Ordering:
      type: object
      properties:
        order:
          type: integer
          example: 1
    MenuItem:
      type: object
      properties:
        label:
          type: string
          example: '[Code]'
        url:
          type: string
          example: https://gitlab.com/fccagou/mydashboard
    RemoteConnect:
      type: object
      properties:
        cmd:
          type: string
          example: './data/remote_connect.sh ...'
        status:
          type: integer
          example: 2
        pid:
          type: integer
          example: 1234
        msg:
          type: string
          description: Connection message
    PreferenceItem:
      type: object
      properties:
        name:
          type: string
          example: 'my_pref'
        value:
          type: string
          example: 'my_value'
        default:
          type: string
          example: 'default_value'
        type:
          type: string
          enum: [resolution, boolean, integer]
          example: 'boolean'
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          example: 1234
        message:
          type: string
          example: 'Error message'
    ApiErrorForm:
      type: object
      properties:
        field:
          type: string
          example: 'field_name'
        message:
          type: string
          example: 'Error message'
    ApiErrorFormResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/ApiErrorForm'